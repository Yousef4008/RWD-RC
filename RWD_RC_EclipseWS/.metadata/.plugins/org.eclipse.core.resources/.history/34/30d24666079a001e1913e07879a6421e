 /*	____________________________________________________________________________
  |																			    |
  | APP: Controller Unit														 	    |
  |																			    |
  | File Name: APP.c														    |
  |																			    |
  | Description: Source file for the controller unit							|
  |																			    |
  | Author: Youssif Hossam & Youssif Sami & Hajer Emad							|						    |
  |_____________________________________________________________________________|
*/

#include "HAL/NRF/nrf.h"
#include "MCAL/GPIO/gpio.h"
#include "HAL/POT/pot.h"
#include "HAL/LEDS/LEDs.h"
#include "HAL/BUTTONS/buttons.h"
#include <util/delay.h>
#include <avr/io.h>

/*define the array of addresses for send and receive data from another part of NRF24L01*/
uint8 tx_address[5] ={0xEE,0xDD,0xCC,0xBB,0xAA};
/*
 * this array to store in it the two byte used for sending and receive data,
 * this array consist of two elements :
 * 1- the first index with it is 8 bits used for storing the ADC value.
 * 2- the second byte was divided into 6 bits using as a flags.
 *
 */
uint8 tx_data[2] = {0,0};

int main(void){

	POT_init();			/*Initialization of Potentiometer*/
	BUTTONS_init();		/*Initialization of buttons (toggle & 3 push buttons) using internal pull up resistor*/

	/*Initialization of Leds*/
	G_LED_init();
	R_LED_init();

	/* Flashing the leds and buzzer for 0.5 second*/
	G_LED_on();
	R_LED_on();

	_delay_ms(500);

	R_LED_off();
	G_LED_off();

	/*Initialize NRF and give each device master at first*/
	NRF24_init();
	/*Initialize the NRF in the car as a receiver that receive from control unit*/
	NRF24_txMode(tx_address , 10);

	while(1){

//		NRF24_init();
//		NRF24_txMode(tx_address , 10);

		tx_data[0] = POT_readPercentage();

		if(BUTTONS_PB1_getStatus() == PRESSED){
			G_LED_on();
			tx_data[1] |= (1<<0);
		}
		else{
			tx_data[1] &=~ (1<<0);
		}

		if(BUTTONS_PB2_getStatus() == PRESSED){
			G_LED_on();
			tx_data[1] |= (1<<1);
		}
		else{
			tx_data[1] &=~ (1<<1);
		}

		if(BUTTONS_PB3_getStatus() == PRESSED){
			G_LED_on();
			tx_data[1] |= (1<<2);
		}
		else{
			tx_data[1] &=~ (1<<2);
		}

		if(BUTTONS_TS1_getStatus() == PRESSED){
			tx_data[1] |= (1<<3);
		}
		else{
			tx_data[1] &=~ (1<<3);
		}

		if(BUTTONS_TS2_getStatus() == PRESSED){
			tx_data[1] |= (1<<4);
		}
		else{
			tx_data[1] &=~ (1<<4);
		}

		if(NRF_transmit(tx_data)){
			R_LED_on();
			_delay_ms(10);
			R_LED_off();
		}
		G_LED_off();
		_delay_ms(10);
	}
	return 0;
}
